services:
  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  mongodb:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: 
      MONGO_INITDB_ROOT_PASSWORD: password

  tileserver-gl:
    image: maptiler/tileserver-gl
    ports:
      - "8080:8080"
    volumes:
      - ./data:/map
    command: --file /map/vestfold.mbtiles
    restart: unless-stopped
    depends_on:
      map-downloader:
        condition: service_completed_successfully

  map-downloader:
    image: alpine
    volumes:
      - ./data:/map
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    command: >
      /bin/sh -c "
      apk add --no-cache aws-cli coreutils &&
      if [ -f /map/vestfold.mbtiles ] && [ $(stat -c%s /map/vestfold.mbtiles) -gt 1000000 ]; then
        echo 'Valid map file already exists, skipping download.'
      else
        echo 'Map file not found or invalid, downloading from S3...'
        aws s3 cp s3://hydrophone-audio/vestfold.mbtiles /map/vestfold.mbtiles
      fi"
    restart: "no"

volumes:
  minio_data:
