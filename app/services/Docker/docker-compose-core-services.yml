services:
  broker:
    image: confluentinc/cp-kafka:7.6.1
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_LISTENERS: "PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  mongodb:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "9002:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongodb:27017/
      ME_CONFIG_BASICAUTH: false

  aiscatcher:
    image: ghcr.io/jvde-github/ais-catcher:edge
    cap_add:
      - NET_ADMIN
      - SYS_TIME
    devices:
      - "/dev/bus/usb:/dev/bus/usb"
    ports:
      - "8100:8100"
      - "8110:8110"
    command: "-v -N 8110 -S 8110 -F -f /data/ais_data.nmea"
    volumes:
      - ./data:/data

  tileserver-gl:
    image: maptiler/tileserver-gl
    ports:
      - "8080:8080"
    volumes:
      - ./data:/map
    command: --file /map/vestfold.mbtiles
    restart: unless-stopped
    depends_on:
      map-downloader:
        condition: service_completed_successfully

  map-downloader:
    image: alpine
    volumes:
      - ./data:/map
    environment:
      - AWS_ACCESS_KEY_ID=AKIA5CBGTA4PD4DP3UNA
      - AWS_SECRET_ACCESS_KEY=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
      - AWS_DEFAULT_REGION=eu-north-1
    command: >
      /bin/sh -c "
      apk add --no-cache aws-cli coreutils &&
      if [ -f /map/vestfold.mbtiles ] && [ $(stat -c%s /map/vestfold.mbtiles) -gt 1000000 ]; then
        echo 'Valid map file already exists, skipping download.'
      else
        echo 'Map file not found or invalid, downloading from S3...'
        aws s3 cp s3://hydrophone-audio/vestfold.mbtiles /map/vestfold.mbtiles
      fi"
    restart: "no"

volumes:
  minio_data:
